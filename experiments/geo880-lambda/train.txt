meetings that start later than the weekly standup meeting
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string end_time)))))

meeting whose start time is larger than end time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string end_time)))))

what date is the weekly standup meeting
(listValue (getProperty en.meeting.weekly_standup (string date)))

date of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string date)))

when is the weekly standup
(listValue (getProperty en.meeting.weekly_standup (string start_time)))

start time of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string start_time)))

show me all meetings in greenberg cafe that alice is attending
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))

meeting whose location is greenberg cafe and whose attendee is alice
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))

show me the meeting starting latest in the day
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string max) (ensureNumericProperty (string start_time))))

meeting that has the largest start time
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string max) (ensureNumericProperty (string start_time))))

show me all meetings not ending at 10 am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string !=) (time 10 0)))

meeting whose end time is not 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string !=) (time 10 0)))

show me all meetings with at least two people attending
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string >=) (number 2)))

meeting that has at least two attendee
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string >=) (number 2)))

show me all meetings lasting for three hours
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))

meeting whose length is three hours and whose length is three hours
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))

meetings that start before 10am or before 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

meeting whose start time is smaller than 10am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

which meetings dont start at 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string !=) (time 10 0)))

meeting whose start time is not 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string !=) (time 10 0)))

what meeting ends before the start of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meeting whose end time is smaller than start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

show me meetings after jan 2
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (concat (date 2015 1 2) (date 2015 1 3)))))

meeting whose date is larger than jan 2 or jan 3
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (concat (date 2015 1 2) (date 2015 1 3)))))

what meeting has the earliest start time
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string start_time))))

meeting that has the smallest start time
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string start_time))))

show me all meetings three hours long at the greenberg cafe
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string location) (string =) en.location.greenberg_cafe))

meeting whose length is three hours and whose location is greenberg cafe
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string location) (string =) en.location.greenberg_cafe))

show me all meetings ending no later than 10 am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (time 10 0))))

meeting whose end time is at most 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (time 10 0))))

important meeting on january 2nd
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string is_important)) (string date) (string =) (date 2015 1 2)))

meeting that is important and whose date is jan 2
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string is_important)) (string date) (string =) (date 2015 1 2)))

show me all meetings that begin no later than the time the weekly standup meeting starts
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meeting whose start time is at most start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

how long is the weekly standup meeting
(listValue (getProperty en.meeting.weekly_standup (string length)))

length of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string length)))

show me all 3 hour long meetings that end at 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))

meeting whose end time is 10am and whose length is three hours
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))

show me all meetings not beginning at 10 am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string !=) (time 10 0)))

meeting whose start time is not 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string !=) (time 10 0)))

which meetings end when weekly standup is scheduled to start
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (getProperty en.meeting.weekly_standup (string start_time))))

meeting whose end time is start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (getProperty en.meeting.weekly_standup (string start_time))))

show me all locations which have had at least two meetings
(listValue (countComparative (getProperty (singleton en.location) (string type)) (reverse (string location)) (string >=) (number 2) (getProperty (singleton en.meeting) (string type))))

location that is location of at least two meeting
(listValue (countComparative (getProperty (singleton en.location) (string type)) (reverse (string location)) (string >=) (number 2) (getProperty (singleton en.meeting) (string type))))

show me meetings that take 3 hours
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))

meeting whose length is three hours and whose length is three hours
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))

what meeting had the fewest people show up
(listValue (countSuperlative (getProperty (singleton en.meeting) (string type)) (string min) (string attendee)))

meeting that has the least number of attendee
(listValue (countSuperlative (getProperty (singleton en.meeting) (string type)) (string min) (string attendee)))

what time does the weekly stand up end
(listValue (getProperty en.meeting.weekly_standup (string end_time)))

end time of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string end_time)))

what meeting ends at 10am and alice is attending
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)))

meeting whose attendee is alice and whose end time is 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)))

show me average meeting length
(listValue (aggregate (string avg) (getProperty (getProperty (singleton en.meeting) (string type)) (string length))))

average length of meeting
(listValue (aggregate (string avg) (getProperty (getProperty (singleton en.meeting) (string type)) (string length))))

person attending jan 2nd meeting
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (date 2015 1 2))))

person that is attendee of meeting whose date is jan 2
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (date 2015 1 2))))

show me all meetings with either bob or alice attending
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (concat en.person.alice en.person.bob)))

meeting whose attendee is alice or bob
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (concat en.person.alice en.person.bob)))

show me meetings that have two attendees
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (number 2)))

meeting that has two attendee
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (number 2)))

show me all meetings ending at the same time or earlier than the weekly standup begins
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meeting whose end time is at most start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

show me all meetings that have two attendees
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (number 2)))

meeting that has two attendee
(listValue (countComparative (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) (number 2)))

show me all attendees of meetings on january 2nd
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (date 2015 1 2))))

person that is attendee of meeting whose date is jan 2
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (date 2015 1 2))))

meeting which starts at 10 am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string =) (time 10 0)))

meeting whose start time is 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string =) (time 10 0)))

what important meeting has a location at greenberg cafe
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe))

meeting that is important and whose location is greenberg cafe
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe))

show me all three hour meetings on jan 2
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))

meeting whose length is three hours and whose date is jan 2
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))

find all meetings which begin on january 2nd or january 3rd
(listValue (concat (date 2015 1 2) (date 2015 1 3)))

jan 2 or jan 3
(listValue (concat (date 2015 1 2) (date 2015 1 3)))

which meeting begins earliest
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string start_time))))

meeting that has the smallest start time
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string start_time))))

show me all meetings ending after 10 am or 3 pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string >) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

meeting whose end time is larger than 10am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string >) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

what meeting ends at most at 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (time 10 0))))

meeting whose end time is at most 10am
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (time 10 0))))

location features the largest number of meetings
(listValue (countSuperlative (getProperty (singleton en.location) (string type)) (string max) (reverse (string location)) (getProperty (singleton en.meeting) (string type))))

location that is location of the most number of meeting
(listValue (countSuperlative (getProperty (singleton en.location) (string type)) (string max) (reverse (string location)) (getProperty (singleton en.meeting) (string type))))

what meetings have a start time of 10 am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string =) (concat (time 10 0) (time 15 0))))

meeting whose start time is 10am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string start_time) (string =) (concat (time 10 0) (time 15 0))))

meetings at greenberg cafe attended by alice
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))

meeting whose attendee is alice and whose location is greenberg cafe
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))

show me the dates of all weekly standup meetings
(listValue (getProperty en.meeting.weekly_standup (string date)))

date of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string date)))

what meeting has an end time the same as weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meeting whose end time is at most start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

what meetings end at the same time as the weekly roundup meeting
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (getProperty en.meeting.weekly_standup (string end_time))))

meeting whose end time is end time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (getProperty en.meeting.weekly_standup (string end_time))))

meeting in which alice is attending which starts at 1000 am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string start_time) (string =) (time 10 0)))

meeting whose attendee is alice and whose start time is 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string attendee) (string =) en.person.alice) (string start_time) (string =) (time 10 0)))

show me all meetings scheduled to be less than three hours or less than one hour
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string length)) (string <) (ensureNumericEntity (concat (number 3 en.hour) (number 1 en.hour)))))

meeting whose length is smaller than three hours or one hour
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string length)) (string <) (ensureNumericEntity (concat (number 3 en.hour) (number 1 en.hour)))))

which meeting is scheduled on the earliest date
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string date))))

meeting that has the smallest date
(listValue (superlative (getProperty (singleton en.meeting) (string type)) (string min) (ensureNumericProperty (string date))))

meetings held later than january 2
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (date 2015 1 2))))

meeting whose date is larger than jan 2
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (date 2015 1 2))))

show me meetings that take 3 hours and are with alice
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice))

meeting whose length is three hours and whose attendee is alice
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice))

what person is attending weekly startup
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) en.meeting.weekly_standup))

person that is attendee of weekly standup
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) en.meeting.weekly_standup))

meeting starts before 10am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

meeting whose start time is smaller than 10am or 3pm
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string <) (ensureNumericEntity (concat (time 10 0) (time 15 0)))))

what meeting no later than that of weekly startup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string date)))))

meeting whose date is at most date of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string <=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string date)))))

what meeting is longer than weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string length)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string length)))))

meeting whose length is larger than length of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string length)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string length)))))

what meeting has a after jan 2 or 3
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (concat (date 2015 1 2) (date 2015 1 3)))))

meeting whose date is larger than jan 2 or jan 3
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string date)) (string >) (ensureNumericEntity (concat (date 2015 1 2) (date 2015 1 3)))))

show me all meetings which begin after the weekly standup ends
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string >=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string end_time)))))

meeting whose start time is at least end time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string start_time)) (string >=) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string end_time)))))

what is the start time for the weekly stand up meeting
(listValue (getProperty en.meeting.weekly_standup (string start_time)))

start time of weekly standup
(listValue (getProperty en.meeting.weekly_standup (string start_time)))

how long is the meeting
(listValue (aggregate (string sum) (getProperty (getProperty (singleton en.meeting) (string type)) (string length))))

total length of meeting
(listValue (aggregate (string sum) (getProperty (getProperty (singleton en.meeting) (string type)) (string length))))

meetings that end after the weekly startup meeting starts
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meeting whose end time is larger than start time of weekly standup
(listValue (filter (getProperty (singleton en.meeting) (string type)) (ensureNumericProperty (string end_time)) (string >) (ensureNumericEntity (getProperty en.meeting.weekly_standup (string start_time)))))

meetings that are attended by alice and are three hours long
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice))

meeting whose length is three hours and whose attendee is alice
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice))

who is at the weekly standup or annual review
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (concat en.meeting.weekly_standup en.meeting.annual_review)))

person that is attendee of weekly standup or annual review
(listValue (filter (getProperty (singleton en.person) (string type)) (reverse (string attendee)) (string =) (concat en.meeting.weekly_standup en.meeting.annual_review)))

which meetings end at 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)))

meeting whose end time is 10am and whose end time is 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)))

meetings that end at 10am and start at 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)))

meeting whose end time is 10am and whose start time is 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)))

meeting which is on jan 2 or jan 3
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (concat (date 2015 1 2) (date 2015 1 3))))

meeting whose date is jan 2 or jan 3
(listValue (filter (getProperty (singleton en.meeting) (string type)) (string date) (string =) (concat (date 2015 1 2) (date 2015 1 3))))

show me the people attending the most meetings
(listValue (countSuperlative (getProperty (singleton en.person) (string type)) (string min) (reverse (string attendee)) (getProperty (singleton en.meeting) (string type))))

person that is attendee of the least number of meeting
(listValue (countSuperlative (getProperty (singleton en.person) (string type)) (string min) (reverse (string attendee)) (getProperty (singleton en.meeting) (string type))))

important meeting at 10am
(listValue (filter (filter (getProperty (singleton en.meeting) (string type)) (string is_important)) (string start_time) (string =) (time 10 0)))

